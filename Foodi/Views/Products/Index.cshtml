@model IEnumerable<Product>
@{
    ViewData["Title"] = "Products";
}

<div class="row ms-3 me-3 mt-4 border shadow-ms rounded-3">

    <div class="d-flex justify-content-between align-items-center" style="background-color:#f9fafd;">
        <h1 class="m-4">Products</h1>
        <a class="btn btn-primary btn-lg m-4" asp-action="Create" style="width:10%; font-weight:600;">
          <i class="fa-solid fa-plus me-1"></i>Add
        </a>
    </div>

    
    @if (!Model.Any())
    {
        <div class="alert mt-4 mb-4" style="background-color:#fcb57d;">
            <div class="d-flex">
                <i class="fa-solid fa-circle-exclamation fa-lg me-2" style="line-height:30px;"></i>
                <h4 class="alert-heading d-flex"> No category found! </h4>
            </div>
            <p class="mb-0"> No products were added yet</p>
        </div>
    }

    else
    {
        <div class="p-4">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            <div class="ms-4">
                                Name
                            </div>
                        </th>
                        <th style="width:14%;">Price</th>
                        <th style="width:16%;">Category</th>
                        <th style="width:24%;">Created On</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in Model)
                    {
                        <tr id="product-@product.Id" class="">
                            <td style="width:30%;">
                                <div class="ms-1">
                                    <img class="mx-auto" src="~/images/@($"{product.ImageName}")" alt="@product.Name" style="width:35%;">
                                    @product.Name
                                </div>
                            </td>
                            <td style="vertical-align: middle;">
                                <div class="ms-2" >
                                    @product.Price
                                </div>
                            </td>
                            <td style="vertical-align: middle;">
                                <div class="ms-2">
                                    @product.Category.Name
                                </div>
                            </td>
                            <td style="vertical-align: middle;">
                                @product.CreatedDate.ToString("dd/MM/yyyy")
                            </td>
                            <td style="vertical-align: middle;">
                                <div class="dropdown ms-4">
                                    <a class="text-dark" role="button" data-toggle="dropdown" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <i class="fa-solid fa-ellipsis"></i>
                                    </a>
                                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                        <li><a class="dropdown-item" asp-action="Update" asp-route-id="@product.Id">Edit</a></li>
                                        <li><a class="dropdown-item  js-delete" href="#" data-id="@product.Id">Delete</a></li>
                                    </ul>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

</div>


@section Scripts
{
    <script>
        
        $(document).ready(function () {

            var message = '@TempData["Message"]';
            var messageType = '@TempData["MessageType"]';

            toastr.options = {
                "positionClass": "toast-bottom-right", 
                "closeButton": true,
                "progressBar": true,
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showDuration": "300",
                "hideDuration": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };

            if (message) {
                toastr[messageType](message);
            }


            $('.js-delete').on('click', function (e) {
                e.preventDefault(); 

                var data = $(this).data("id");
                
                const swal= Swal.mixin({
                    customClass: {
                        confirmButton: "btn btn-danger mx-2",
                        cancelButton: "btn btn-success"
                    },
                    buttonsStyling: false
                });

                swal.fire({
                    title: "Are you sure you want to delete this Product?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Yes, delete it!",
                    cancelButtonText: "No, cancel!",
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: `/Products/Delete`,  //`/Products/Delete/${btn.data('id')}`,
                            method: 'DELETE',
                            contentType: 'application/json',
                            data: JSON.stringify(data),
                            success: function (response) {
                                if (response.success) {
                                    $('#product-' + data).remove(); 
                                    swal.fire({
                                        title: "Deleted!",
                                        text: "Product deleted successfully",
                                        icon: "success"
                                    });
                                } 
                                else 
                                {
                                    swal.fire(
                                        'Oooops...',
                                        'Something went wrong.',
                                        'error'
                                    );
                                }
                            },
                            error: function () {

                                swal.fire(
                                    'Oooops...',
                                    'Something went wrong.',
                                    'error'
                                );
                            }
                        });

                       
                    }
                  
                });

               
            });
        });

   

    </script>
}